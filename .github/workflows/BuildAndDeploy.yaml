name: Build and Deploy

on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      VALIDATE_ONLY:
        description: Only build and validate, do not deploy
        required: false
        type: boolean
        default: true

      CONFIGURATION:
        description: Configuration to build.
        required: true
        type: string

      BUILD_NUMBER:
        description: Build number to use.
        required: true
        type: string

      PLATFORM:
        description: Platform to build for.
        required: false
        type: string
        default: Win32

      SKIP_INVALID_CONFIGURATIONS:
        description: Skip invalid configurations.
        required: false
        type: boolean
        default: true

      COPY_UT_PLATFORM_BINARIES:
        description: Copy UT platform binaries.
        required: false
        type: boolean
        default: true

      NUGET_CONFIG_FILE:
        description: Path to the NuGet configuration file relative to the repository root.
        required: false
        type: string
        default: src/NuGet.config

      REQUIRED_GIT_REPOS_FILE:
        description: Path to the required git repositories file relative to the repository root.
        required: false
        type: string
        default: required-git-repos.json

      deployVersion:
        description: Version to deploy
        required: false
        type: string
        default: latest

      deployTarget:
        description: Deployment targets (comma-separated)
        required: false
        type: string
        default: DevTest

jobs:
  build:
    uses: ngarg1234/cs-prof-common-utilities/.github/workflows/build.yaml@master
    with:
      buildType: ${{ github.event.inputs.buildType }}
      CONFIGURATION: ${{ github.event.inputs.CONFIGURATION }}

  deploy:
    if: github.event_name != 'workflow_dispatch' || (github.event.inputs && github.event.inputs.VALIDATE_ONLY == 'false')
    needs: build
    uses: ngarg1234/cs-prof-common-utilities/.github/workflows/deploy.yaml@master
    with:
      deployVersion: ${{ github.event.inputs.deployVersion }}
      deployTarget: ${{ github.event.inputs.deployTarget }}
