name: Deployment Workflow
on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      version:
        required: false
        type: string   
      trigger_source:
        required: false
        type: string
 
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        type: string
      version:
        description: 'Version to deploy'
        required: false
        type: string
 
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]
jobs:
  debug-event:
    runs-on: ubuntu-latest
    steps:
      - name: Print event name
        run: |
          echo "Event name is ${{ github.event_name }}"
          echo "Trigger source: ${{ inputs.trigger_source }}"
 
  # âœ… Build job - runs for workflow_call, push, and pull_request (NOT for manual)
  build:
    if: github.event_name != 'workflow_dispatch'
    runs-on: ubuntu-latest
    needs: debug-event
    outputs:
      build-version: ${{ steps.set-version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set build version
        id: set-version
        run: |
          if [ "${{ inputs.version }}" != "" ]; then
            echo "version=${{ inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=auto-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          fi
 
      - name: Install dependencies
        run: echo "Installing dependencies..."
      - name: Run tests
        run: echo "Running tests..."
      - name: Build project
        run: |
          echo "Building project..."
          echo "Build version: $(cat $GITHUB_OUTPUT | grep version | cut -d'=' -f2)"
 
  # âœ… Deploy job - runs for ALL triggers but with different dependencies
  deploy:
    runs-on: ubuntu-latest
    needs: debug-event
    # âœ… For manual triggers, run immediately. For others, wait for build to complete
    if: |
      (github.event_name == 'workflow_dispatch') ||
      (github.event_name != 'workflow_dispatch' && needs.build.result == 'success')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
 
      - name: Set deployment parameters
        id: deploy-params
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "environment=${{ inputs.environment }}" >> $GITHUB_OUTPUT
            echo "version=${{ inputs.version || 'latest' }}" >> $GITHUB_OUTPUT
            echo "deploy-type=manual" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" == "workflow_call" ]; then
            echo "environment=${{ inputs.environment }}" >> $GITHUB_OUTPUT
            echo "version=${{ inputs.version || 'latest' }}" >> $GITHUB_OUTPUT
            echo "deploy-type=workflow-call" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" == "push" ]; then
            echo "environment=staging" >> $GITHUB_OUTPUT
            echo "version=${{ needs.build.outputs.build-version }}" >> $GITHUB_OUTPUT
            echo "deploy-type=auto-push" >> $GITHUB_OUTPUT
          else
            echo "environment=dev" >> $GITHUB_OUTPUT
            echo "version=${{ needs.build.outputs.build-version }}" >> $GITHUB_OUTPUT
            echo "deploy-type=pull-request" >> $GITHUB_OUTPUT
          fi
 
      - name: Deploy
        run: |
          echo "ðŸš€ Deploying to ${{ steps.deploy-params.outputs.environment }}"
          echo "ðŸ“¦ Version: ${{ steps.deploy-params.outputs.version }}"
          echo "ðŸ”§ Deploy type: ${{ steps.deploy-params.outputs.deploy-type }}"
          echo "âš¡ Triggered by: ${{ github.event_name }}"
