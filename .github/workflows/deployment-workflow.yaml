name: Deployment Workflow

on:

  workflow_call:

    inputs:

      environment:

        required: true

        type: string

      version:

        required: false

        type: string
 
  workflow_dispatch:

    inputs:

      environment:

        description: 'Deployment environment'

        required: true

        type: string

      version:

        description: 'Version to deploy'

        required: false

        type: string
 
  #pull_request:

   # branches: [ main, develop ]

  #push:

   # branches: [ main, develop ]

jobs:

  # ✅ Build job - runs for workflow_call, push, and pull_request (NOT for manual)

  build:

    if: github.event_name != 'workflow_dispatch'

    runs-on: ubuntu-latest

    outputs:

      build-version: ${{ steps.set-version.outputs.version }}

    steps:

      - name: Print build event

        run: |

          echo "=== BUILD JOB ==="

          echo "Event name: ${{ github.event_name }}"
 
      - name: Checkout code

        uses: actions/checkout@v4

      - name: Set build version

        id: set-version

        run: |

          if [ "${{ inputs.version }}" != "" ]; then

            echo "version=${{ inputs.version }}" >> $GITHUB_OUTPUT

          else

            echo "version=auto-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

          fi
 
      - name: Install dependencies

        run: echo "Installing dependencies..."

      - name: Run tests

        run: echo "Running tests..."

      - name: Build project

        run: |

          echo "Building project..."

          echo "Build completed successfully"
 
  # ✅ Deploy job - runs always but checks build success when needed

  deploy:

    runs-on: ubuntu-latest

    needs: [build]

    if: always()

    steps:

      - name: Print deploy event

        run: |

          echo "=== DEPLOY JOB ==="

          echo "Event name: ${{ github.event_name }}"

          echo "Build result: ${{ needs.build.result }}"
 
      # ✅ Check if build succeeded when build was supposed to run

      - name: Check build success

        run: |

          echo "=== Checking Build Success ==="

          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then

            echo "✅ Manual deployment - build was skipped, proceeding with deploy"

          elif [ "${{ needs.build.result }}" == "success" ]; then

            echo "✅ Build succeeded, proceeding with deployment"

          elif [ "${{ needs.build.result }}" == "skipped" ]; then

            echo "⚠️  Build was skipped unexpectedly"

            exit 1

          elif [ "${{ needs.build.result }}" == "failure" ]; then

            echo "❌ Build failed, cannot deploy"

            echo "Build must succeed before deployment"

            exit 1

          elif [ "${{ needs.build.result }}" == "cancelled" ]; then

            echo "❌ Build was cancelled, cannot deploy"

            exit 1

          else

            echo "❌ Unknown build result: ${{ needs.build.result }}"

            exit 1

          fi
 
      - name: Checkout code

        uses: actions/checkout@v4
 
      - name: Set deployment parameters

        id: deploy-params

        run: |

          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then

            echo "environment=${{ inputs.environment }}" >> $GITHUB_OUTPUT

            echo "version=${{ inputs.version || 'latest' }}" >> $GITHUB_OUTPUT

            echo "deploy-type=manual" >> $GITHUB_OUTPUT

          elif [ "${{ github.event_name }}" == "workflow_call" ]; then

            echo "environment=${{ inputs.environment }}" >> $GITHUB_OUTPUT

            echo "version=${{ inputs.version || needs.build.outputs.build-version || 'latest' }}" >> $GITHUB_OUTPUT

            echo "deploy-type=workflow-call" >> $GITHUB_OUTPUT

          elif [ "${{ github.event_name }}" == "push" ]; then

            echo "environment=staging" >> $GITHUB_OUTPUT

            echo "version=${{ needs.build.outputs.build-version || 'fallback-push' }}" >> $GITHUB_OUTPUT

            echo "deploy-type=auto-push" >> $GITHUB_OUTPUT

          else

            echo "environment=dev" >> $GITHUB_OUTPUT

            echo "version=${{ needs.build.outputs.build-version || 'fallback-pr' }}" >> $GITHUB_OUTPUT

            echo "deploy-type=pull-request" >> $GITHUB_OUTPUT

          fi
 
      - name: Deploy

        run: |

          echo "🚀 Deploying to ${{ steps.deploy-params.outputs.environment }}"

          echo "📦 Version: ${{ steps.deploy-params.outputs.version }}"

          echo "🔧 Deploy type: ${{ steps.deploy-params.outputs.deploy-type }}"

          echo "⚡ Triggered by: ${{ github.event_name }}"

          if [ "${{ github.event_name }}" != "workflow_dispatch" ]; then

            echo "🔍 Build result: ${{ needs.build.result }}"

            echo "✅ Build succeeded, deployment proceeding"

          else

            echo "🔍 Manual deployment (no build required)"

          fi
 
