name: Deployment Workflow

on:

  workflow_call:

    inputs:

      environment:

        required: true

        type: string

      version:

        required: false

        type: string
 
  workflow_dispatch:

    inputs:

      environment:

        description: 'Deployment environment'

        required: true

        type: string

      version:

        description: 'Version to deploy'

        required: false

        type: string
 
  pull_request:

    branches: [ main, develop ]

  push:

    branches: [ main, develop ]

jobs:

  debug-event:

    runs-on: ubuntu-latest

    steps:

      - name: Print event name

        run: |

          echo "Event name is ${{ github.event_name }}"

          echo "Trigger source: ${{ inputs.trigger_source }}"
 
  # ✅ Build job - runs for workflow_call, push, and pull_request (NOT for manual)

  build:

    if: github.event_name != 'workflow_dispatch'

    runs-on: ubuntu-latest

    needs: debug-event

    outputs:

      build-version: ${{ steps.set-version.outputs.version }}

      build-status: ${{ job.status }}

    steps:

      - name: Checkout code

        uses: actions/checkout@v4

      - name: Set build version

        id: set-version

        run: |

          if [ "${{ inputs.version }}" != "" ]; then

            echo "version=${{ inputs.version }}" >> $GITHUB_OUTPUT

          else

            echo "version=auto-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

          fi
 
      - name: Install dependencies

        run: echo "Installing dependencies..."

      - name: Run tests

        run: echo "Running tests..."

      - name: Build project

        run: |

          echo "Building project..."

          echo "Build version: $(cat $GITHUB_OUTPUT | grep version | cut -d'=' -f2)"
 
      # ✅ Add explicit build completion marker

      - name: Mark build complete

        run: echo "Build job completed successfully"
 
  # ✅ Deploy job - runs for ALL triggers but with different dependencies

  deploy:

    runs-on: ubuntu-latest

    # ✅ Fixed: Add build to needs array when build job should run

    needs: [debug-event, build]

    # ✅ Fixed conditional logic with proper dependency handling

    if: |

      (github.event_name == 'workflow_dispatch') ||

      (github.event_name != 'workflow_dispatch' && (needs.build.result == 'success' || needs.build.result == 'skipped'))

    steps:

      - name: Checkout code

        uses: actions/checkout@v4
 
      # ✅ Add troubleshooting step to debug needs.build.result

      - name: Debug build result

        run: |

          echo "=== Debugging Build Dependencies ==="

          echo "Event name: ${{ github.event_name }}"

          echo "Build job result: ${{ needs.build.result }}"

          echo "Build job outputs: ${{ toJson(needs.build.outputs) }}"

          echo "Build status from output: ${{ needs.build.outputs.build-status }}"

          echo "All needs: ${{ toJson(needs) }}"
 
      - name: Set deployment parameters

        id: deploy-params

        run: |

          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then

            echo "environment=${{ inputs.environment }}" >> $GITHUB_OUTPUT

            echo "version=${{ inputs.version || 'latest' }}" >> $GITHUB_OUTPUT

            echo "deploy-type=manual" >> $GITHUB_OUTPUT

          elif [ "${{ github.event_name }}" == "workflow_call" ]; then

            echo "environment=${{ inputs.environment }}" >> $GITHUB_OUTPUT

            echo "version=${{ inputs.version || 'latest' }}" >> $GITHUB_OUTPUT

            echo "deploy-type=workflow-call" >> $GITHUB_OUTPUT

          elif [ "${{ github.event_name }}" == "push" ]; then

            echo "environment=staging" >> $GITHUB_OUTPUT

            # ✅ Use build version from outputs with fallback

            BUILD_VERSION="${{ needs.build.outputs.build-version }}"

            if [ -z "$BUILD_VERSION" ]; then

              BUILD_VERSION="fallback-$(date +%Y%m%d%H%M%S)"

            fi

            echo "version=$BUILD_VERSION" >> $GITHUB_OUTPUT

            echo "deploy-type=auto-push" >> $GITHUB_OUTPUT

          else

            echo "environment=dev" >> $GITHUB_OUTPUT

            # ✅ Use build version from outputs with fallback

            BUILD_VERSION="${{ needs.build.outputs.build-version }}"

            if [ -z "$BUILD_VERSION" ]; then

              BUILD_VERSION="fallback-$(date +%Y%m%d%H%M%S)"

            fi

            echo "version=$BUILD_VERSION" >> $GITHUB_OUTPUT

            echo "deploy-type=pull-request" >> $GITHUB_OUTPUT

          fi
 
      - name: Deploy

        run: |

          echo "🚀 Deploying to ${{ steps.deploy-params.outputs.environment }}"

          echo "📦 Version: ${{ steps.deploy-params.outputs.version }}"

          echo "🔧 Deploy type: ${{ steps.deploy-params.outputs.deploy-type }}"

          echo "⚡ Triggered by: ${{ github.event_name }}"

          echo "🔍 Build result was: ${{ needs.build.result }}"
 
  # ✅ Alternative deploy job for manual triggers (if needed)

  deploy-manual-only:

    if: github.event_name == 'workflow_dispatch'

    runs-on: ubuntu-latest

    needs: debug-event

    steps:

      - name: Checkout code

        uses: actions/checkout@v4
 
      - name: Manual deploy

        run: |

          echo "🚀 Manual deployment to ${{ inputs.environment }}"

          echo "📦 Version: ${{ inputs.version || 'latest' }}"

          echo "⚡ Triggered manually via workflow_dispatch"
 
